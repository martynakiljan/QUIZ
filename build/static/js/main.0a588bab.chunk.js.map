{"version":3,"sources":["theme/GlobalStyle.js","Components/Progress/StyledProgressText.styled.js","Components/Progress/Progress.js","theme/mainTheme.js","Components/MainTitle.js/StyledMainTitle.styled.js","Components/MainTitle.js/Maintitle.js","Components/Icon/StyledIconContainer.styled.js","Components/Icon/Icon.js","Components/ContainerForm/ContainerForm.styled.js","Components/Question/StyledQuestionText.styled.js","Components/ContextQuiz/ContextQuiz.js","Components/Question/Question.js","Components/Answer/AnswerContainer.js","Reducers/ReducersType.js","Components/Answer/Answer.js","Components/Answer/Answers.js","Components/Buttons/StyledButtonNext.styled.js","Components/Buttons/ButtonNext.js","Components/Error/StyledErrorText.styled.js","Components/ResultsBox/StyledResultsBox.styled.js","Components/ResultsBox/ResultsBox.js","Components/Buttons/StyledButtonRestart.styled.js","Components/Buttons/ButtonRestart.js","DataQuestion/dataQuestion.js","Reducers/quizReducer.js","Components/ProgressBar/StyledProgressBar.js","Components/ProgressBar/ProgressBar.js","Components/Quiz/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledProgressText","styled","h2","theme","greyStronger","fontSize","s","light","Progress","total","currentQuestion","mainColor","secondaryMainColor","fioletColor","errorColor","grey100","grey200","grey300","black","bold","xxs","xs","m","l","xl","StyledMainTitle","h1","MainTitle","StyledIconContainer","div","Image","className","icon","faQuestion","StyledFormContainer","StyledQuestionText","p","QuizContext","createContext","Question","props","state","useContext","question","questions","AnswerContainer","button","SET_CURRENT_ANSWER","SET_CURRENT_QUESTION","SET_ERROR","SET_SHOW_RESULTS","ADD_ANSWER","RESET_QUIZ","Answer","letter","answer","selected","classes","push","value","join","onClick","e","dispatch","type","currentAnswer","target","error","Answers","answer_a","answer_b","answer_c","blinkingText","keyframes","StyledButtonNext","ButtonNext","breatheAnimation","StyledErrorText","StyledResultsBox","ResultsBox","children","StyledButtonRestart","ButtonRestart","id","correct_answer","quizReducer","action","progressDegree","answers","showResults","ContainerStyles","FillerStyles","LabelStyles","span","ProgressBar","Quiz","initialState","useReducer","renderResultMark","faThumbsUp","faThumbsDown","map","find","questionID","Provider","length","Icon","renderError","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a588bab.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600');\n  \n  *, *::before, *::after {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    \n    \n  }\n  \n  html {\n    font-size: 62.5%; \n  }\n  \n  body {\n    padding: 0;\n    margin: 0;\n    font-size: 1.6rem;\n    font-family: \"Montserrat\", sans-serif;\n    background: #ebebeb;\n   \n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst StyledProgressText = styled.h2`\n  \n  color: ${({ theme }) => theme.greyStronger};\n  font-size: ${({ theme }) => theme.fontSize.s};\n  width: 100%;\n  text-align: center;\n  padding: 20px;\n  font-weight: ${({ theme }) => theme.light};\n\n \n\n`;\n\nexport default StyledProgressText","import React  from 'react';\nimport StyledProgressText from './StyledProgressText.styled'\n\nfunction Progress({total, currentQuestion})  {\n    return (\n        <StyledProgressText>How well do you know your European capitals?  {currentQuestion} of {total}</StyledProgressText>\n    )\n}\n\nexport default Progress","export const theme = {\n    mainColor: '#F8F8FF',\n    secondaryMainColor: '#F8F8FF',\n    fioletColor: '#8A2BE2',\n    errorColor: '#B22222',\n    grey100: 'hsl(0, 0%, 96%)',\n    grey200: 'hsl(0, 0%, 90%)',\n    grey300: 'hsl(0, 0%, 70%)',\n    black: 'hsl(0, 0%, 0%)',\n    greyStronger: '#282828',\n    light: 300,\n    bold: 600,\n    fontSize: {\n      xxs: '1rem',\n      xs: '1.2rem',\n      s: '1.6rem',\n      m: '2.1rem',\n      l: '2.4rem',\n      xl: '4rem',\n    },\n  };\n  ","import styled from 'styled-components';\n\nconst StyledMainTitle = styled.h1`\n  \n  color: ${({ theme }) => theme.grey300};\n  width: 100%;\n  text-align: center;\n  font-weight: ${({ theme }) => theme.bold};\n  font-size: ${({ theme }) => theme.fontSize.xl};\n \n\n`;\n\nexport default StyledMainTitle","import React  from 'react';\nimport StyledMainTitle from './StyledMainTitle.styled'\n\nfunction MainTitle()  {\n    return (\n        <StyledMainTitle>Quiz App</StyledMainTitle>\n    )\n}\n\nexport default MainTitle","import styled from 'styled-components';\n\nconst StyledIconContainer = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n`;\n\nexport default StyledIconContainer","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\nimport '../../App.css'\nimport StyledIconContainer from './StyledIconContainer.styled'\n\n\n\nconst Image = () => {\n    return (\n        <StyledIconContainer>\n          <FontAwesomeIcon className=\"iconFontAwesome\" icon={faQuestion} />\n        </StyledIconContainer>\n    )  \n}\n\n\nexport default Image","import styled from 'styled-components';\n\nconst StyledFormContainer = styled.div`\n  \n  background-color: ${({ theme }) => theme.mainColor};\n  margin: 0 auto;\n  min-width: 80%;\n  min-height: 550px;\n  border-radius: 26px;\n  margin: 50px;\n  border-radius: 26px;\n  background: #ebebeb;\n  box-shadow: inset 5px 5px 5px #c8c8c8,\n  inset -6px -5px 5px #ffffff;\n \n\n`;\n\nexport default StyledFormContainer","import styled from 'styled-components';\n\nconst StyledQuestionText = styled.p`\n  \n  color: ${({ theme }) => theme.greyStronger};\n  width: 100%;\n  font-size: ${({ theme }) => theme.fontSize.l};\n  text-align: center;\n  padding: 10px;\n  font-weight: ${({ theme }) => theme.light};\n\n \n\n`;\n\nexport default StyledQuestionText","import {createContext} from 'react'\n\n\nconst QuizContext = createContext()\n\nexport default QuizContext\n\n","import React,{useContext}  from 'react';\nimport StyledQuestionText from './StyledQuestionText.styled'\nimport QuizContext from '../ContextQuiz/ContextQuiz'\n\nfunction Question(props)  {\n\n    const {state} = useContext(QuizContext)\n    const {currentQuestion, questions} = state;\n    const question = questions[currentQuestion]\n\n\n\n    return  <StyledQuestionText>{question.question}</StyledQuestionText>\n    \n}\n\nexport default Question;","import styled from 'styled-components';\n\nconst AnswerContainer = styled.button`\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 47px;\n  border: none;\n  padding: 10px;\n  width: 90%;\n  color: ${({ theme }) => theme.greyStronger};\n  font-weight: ${({ theme }) => theme.light};\n  font-size: ${({ theme }) => theme.fontSize.s};\n  text-transform: uppercase;\n  margin: 20px auto;\n  border-radius: 6px;\n  background: #ebebeb;\n  box-shadow: inset 5px 5px 5px #c8c8c8,\n            inset -5px -5px 5px #ffffff;\n\n\n  &:hover {\n    background: white;\n }\n\n\n\n`;\n\n\nexport default AnswerContainer;","export const SET_CURRENT_ANSWER = 'SET_CURRENT_ANSWER'\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION'\nexport const SET_ERROR = 'SET_ERROR'\nexport const SET_SHOW_RESULTS = 'SET_SHOW_RESULTS'\nexport const ADD_ANSWER = 'ADD_ANSWER'\nexport const RESET_QUIZ = 'RESET_QUIZ'\nexport const ADD__PROGRESS_DEGREE = 'ADD__PROGRESS_DEGREE'","import React  from 'react';\nimport AnswerContainer from './AnswerContainer';\nimport '../../App.css'\nimport { SET_CURRENT_ANSWER, SET_ERROR} from '../../Reducers/ReducersType'\n\n\n\nfunction Answer({letter, answer, selected, ...props})  {\n\n\n    const handleClick = e => {\n\n        props.dispatch({\n            type: SET_CURRENT_ANSWER, \n            currentAnswer: e.target.value\n        })\n            props.dispatch({\n            type: SET_ERROR , error: ''\n         })\n    }\n\n    let classes = ['answer']\n\n    if(selected) {\n        classes.push('selected')\n    }\n\n    return (\n        \n        <AnswerContainer \n        value = {letter}\n        className={classes.join(' ')}\n        onClick={handleClick} >  \n        <span className=\"letter\">{letter}. </span>{answer}\n\n        </AnswerContainer>\n       \n    )\n}\n\nexport default Answer","\nimport React, { useContext } from 'react';\nimport Answer from './Answer'\nimport QuizContext from '../ContextQuiz/ContextQuiz'\n\n\nfunction Answers() {\n    const {state, dispatch} = useContext(QuizContext)\n    const {currentAnswer, currentQuestion, questions} = state;\n    const question = questions[currentQuestion]\n\n    return (\n        <>\n            <Answer\n                letter=\"a\"\n                answer={question.answer_a}\n                selected={currentAnswer === 'a'}\n                dispatch = {dispatch}\n            />\n            <Answer\n                letter=\"b\"\n                answer={question.answer_b}\n                selected={currentAnswer === 'b'}\n                dispatch = {dispatch}\n            />\n            <Answer\n                letter=\"c\"\n                answer={question.answer_c}\n                selected={currentAnswer === 'c'}\n                dispatch = {dispatch}\n            />\n            \n        </>\n    );\n}\n\nexport default Answers;","import styled, { keyframes } from 'styled-components'\n\n\n\nconst blinkingText = keyframes`\n  0%\t\t { color: #39AF35;}\n  25%\t\t{ color: #282828;}\n  50%\t\t{ color: #39AF35;}\n  75%\t\t{ color: #282828;}\n  100%\t{ color: #39AF35;}\n  }\n`\n\n\nconst StyledButtonNext = styled.button`\nmargin-top: 15px;\ndisplay: flex;\njustify-content: center;\nalign-items:center;\nborder-radius: 45px;\nbackground: white;\nborder-radius: 7px;\nbackground: #ebebeb;\noutline: none;\nbox-shadow: inset 8px 8px 16px #b7b7b7,\ninset -8px -8px 16px #ffffff;\nheight: 37px;\nborder: none;  \nmargin-bottom: 15px;\nmargin: 0 auto;\npadding: 15px  25px 15px 25 px;\ntext-transform: uppercase;\nanimation: ${blinkingText} 3s ease-in infinite;;\nfont-weight: ${({ theme }) => theme.bold};\nmargin-top: 20px;\n\n\n  &:hover {\n    border-radius: 3%;\n    background: #ffffff;\n    box-shadow: inset 10px -10px 40px #e8e8e8,\n     inset -10px 10px 40px #ffffff;\n }\n\n\n`;\n\nexport default StyledButtonNext;\n","import React  from 'react';\nimport StyledButtonNext from './StyledButtonNext.styled.js'\n\nfunction ButtonNext({onClick})  {\n    return (\n        <StyledButtonNext onClick={onClick}>Confirm and Continue</StyledButtonNext>\n    )\n}\n\nexport default ButtonNext","import styled, { keyframes } from 'styled-components'\n\n\nconst breatheAnimation = keyframes`\n  from {\n    margin-left: 100%;\n    width: 100%;\n  }\n\n  to {\n    margin-left: 0%;\n    width: 100%;\n  }\n`\n\nconst StyledErrorText = styled.p`\n  \n  color: ${({ theme }) => theme.errorColor};\n  text-align:center;\n  width: 100%;\n  padding-bottom: 20px;\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSize.s};\n  animation-name: ${breatheAnimation};\n  animation-duration: 1s;\n\n\n`;\n\n\nexport default StyledErrorText","import styled from 'styled-components';\n\nconst StyledResultsBox = styled.div`\n\n  background-color: ${({ theme }) => theme.mainColor};\n  margin: 0 auto;\n  width: 90%;\n  min-height: 100vh;\n  border-radius: 10px;\n  background: #ebebeb;\n  box-shadow: inset 5px 5px 5px #c8c8c8,\n            inset -5px -5px 5px #ffffff;\n  \n \n\n`;\n\nexport default StyledResultsBox","import React  from 'react';\nimport StyledResultsBox from '../ResultsBox/StyledResultsBox.styled'\nimport GlobalStyle from '../../theme/GlobalStyle'\n\nfunction ResultsBox({children})  {\n\n    return (\n        <>\n     {/* <GlobalStyle/> */}\n        <StyledResultsBox>\n            <h2 className=\"resultsTitle\">results</h2>\n            {children}\n        </StyledResultsBox>\n        </>\n        \n    )\n    \n}\n\nexport default ResultsBox","import styled, { keyframes } from 'styled-components'\n\nconst blinkingText = keyframes`\n  0%\t\t { color: #39AF35;}\n  25%\t\t{ color: #282828;}\n  50%\t\t{ color: #39AF35;}\n  75%\t\t{ color: #282828;}\n  100%\t{ color: #39AF35;}\n  }\n`\n\nconst StyledButtonRestart = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items:center;\nborder-radius: 45px;\nbackground: white;\nbackground: linear-gradient(145deg, #FFFFFF, #CDCDCD);\nborder-radius: 28px;\nbackground: #e0e0e0;\nbox-shadow:  5px 5px 10px #8d8d8d,\n             -5px -5px 10px #ffffff;\nborder: none;  \nmargin: 0 auto; \npadding: 10px 35px 10px 35px;\nmargin-bottom: 20px;\nanimation: ${blinkingText} 3s ease-in infinite;;\nfont-weight: ${({ theme }) => theme.bold};\nmargin-top: 20px;\n\n\n  &:hover {\n    background: #ffffff;\n    box-shadow: inset 10px -10px 40px #e8e8e8,\n     inset -10px 10px 40px #ffffff;\n }\n\n\n`;\n\nexport default StyledButtonRestart","import React  from 'react';\nimport StyledButtonRestart from './StyledButtonRestart.styled'\n\nfunction ButtonRestart({onClick})  {\n    return (\n        <StyledButtonRestart onClick={onClick}>Restart</StyledButtonRestart>\n    )\n}\n\nexport default ButtonRestart"," const questions = [\n    {\n        id: 1,\n        question: 'The capital of Albania is:',\n        answer_a:\n            'Vienna',\n        answer_b: 'Tirana',\n        answer_c:\n            \"Skopje\",\n        correct_answer: 'b',\n       \n    },\n   \n    {\n\n        id: 2,\n        question: 'The capital of Belarus is:',\n        answer_a: 'Podgorica',\n        answer_b: 'Moscow',\n        answer_c: 'Minsk',\n        correct_answer: 'c',\n       \n    },\n\n    {\n        id: 3,\n        question: 'The capital of Romania is:',\n        answer_a: 'Copenhagen',\n        answer_b: 'Belgrade',\n        answer_c: 'Bucharest',\n        correct_answer: 'c',\n       \n    },\n    {\n        id: 4,\n        question: 'The capital of Kazakhstan is:',\n        answer_a: 'Nur-Sultan',\n        answer_b: 'Reykjavik',\n        answer_c: 'Helsinki',\n        correct_answer: 'a',\n        \n    },\n    {\n        id: 5,\n        question: 'The capital of Hungary is:',\n        answer_a: 'Lisbon',\n        answer_b: 'Warsaw',\n        answer_c: 'Budapest',\n        correct_answer: 'c',\n        \n    },\n    {\n        id: 6,\n        question: 'The capital of Cyprus is:',\n        answer_a: 'Pristina',\n        answer_b: 'Nicosia',\n        answer_c: 'Vaduz',\n        correct_answer: 'b',\n        \n    },\n    {\n        id: 7,\n        question: 'The capital of Latvia is:',\n        answer_a: 'Riga',\n        answer_b: 'Amsterdam',\n        answer_c: 'Skopje',\n        correct_answer: 'a',\n       \n    },\n    {\n        id: 8,\n        question: 'The capital of Sweden is:',\n        answer_a: 'Madrid',\n        answer_b: 'Stockholm',\n        answer_c: 'Bern',\n        correct_answer: 'b',\n    },\n\n    {\n        id: 9,\n        question: 'The capital of Ukraine is:',\n        answer_a: 'Prague',\n        answer_b: 'Kyiv',\n        answer_c: 'Sarajevo',\n        correct_answer: 'b',\n       \n    },\n    {\n        id: 10,\n        question: 'The capital of Croatia is:',\n        answer_a: 'Brussels',\n        answer_b: 'Zagreb',\n        answer_c: 'Bucharest',\n        correct_answer: 'b',\n        \n    },\n  ];\n\n  export default questions;","import {ADD_ANSWER, SET_CURRENT_QUESTION, SET_CURRENT_ANSWER, SET_ERROR, SET_SHOW_RESULTS, RESET_QUIZ} from './ReducersType'\n\n\n function quizReducer(state, action) {\n    switch(action.type) {\n\n\n      case SET_CURRENT_ANSWER:\n        return {\n          ...state,\n          currentAnswer: action.currentAnswer\n        }\n\n \n       case SET_CURRENT_QUESTION:\n          return {\n            ...state,\n            currentQuestion: action.currentQuestion,\n            progressDegree: action.progressDegree\n          }  \n\n\n      case SET_ERROR:\n        return {\n          ...state,\n         error: action.error\n        }\n\n\n      case ADD_ANSWER:\n        return {\n          ...state,\n         answers: action.answers\n        }\n\n  \n      case SET_SHOW_RESULTS:\n        return {\n          ...state,\n        showResults: action.showResults\n        }\n      \n        \n        case RESET_QUIZ:\n          return {\n            ...state,\n            answers: [],\n            currentQuestion: 0,\n            currentAnswer: '',\n            showResults: false,\n            error: '',\n            progressDegree: 0,\n\n          }\n        default:\n          return state;\n    }\n\n  }\n\n  export default quizReducer;","\n import styled from \"styled-components\";\n\n export const ContainerStyles = styled.div`\n    height: 20px;\n    width: 50%;\n    background-color: #e0e0de; \n    border-radius: 50px;\n    margin: 0 auto;\n `;\n \n export const FillerStyles = styled.div`\n    height: 100%;\n    width: ${props => props.progressDegree}%;\n    background: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(133,253,45,1) 100%);\n    transition: width 1s ease-in-out;\n    border-radius: inherit;\n    text-align: right;\n  \n  \n `\n export const LabelStyles = styled.span`\n    padding: 5px;\n    color: #ffffff;\n    font-weight: bold;\n   \n \n `;\n ","\nimport React  from 'react';\nimport { ContainerStyles, FillerStyles, LabelStyles } from './StyledProgressBar';\n\n\nconst ProgressBar = ({progressDegree}) => {\n\n\n  return (\n    <ContainerStyles >\n      <FillerStyles progressDegree={progressDegree}>\n        <LabelStyles>{`${progressDegree}%`}</LabelStyles>\n      </FillerStyles>\n    </ContainerStyles>\n  );\n};\n\nexport default ProgressBar;","\nimport React, {useReducer, useEffeState}  from 'react';\nimport GlobalStyle from '../../theme/GlobalStyle';\nimport Progress from '../Progress/Progress'\nimport {theme} from '../../../src/theme/mainTheme'\nimport { ThemeProvider } from 'styled-components';\nimport MainTitle from '../MainTitle.js/Maintitle'\nimport Icon from '../Icon/Icon'\nimport StyledFormContainer from '../ContainerForm/ContainerForm.styled'\nimport Question from '../Question/Question'\nimport Answers from '../Answer/Answers'\nimport ButtonNext from '../Buttons/ButtonNext'\nimport StyledErrorText from '../Error/StyledErrorText.styled'\nimport ResultsBox from '../ResultsBox/ResultsBox'\nimport ButtonRestart from '../Buttons/ButtonRestart'\nimport questions from '../../DataQuestion/dataQuestion'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsDown, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport {ADD_ANSWER, SET_CURRENT_QUESTION, SET_CURRENT_ANSWER, SET_ERROR, SET_SHOW_RESULTS, RESET_QUIZ,} from '../../Reducers/ReducersType'\nimport quizReducer from '../../Reducers/quizReducer'\nimport ProgressBar from '../ProgressBar/ProgressBar'\nimport QuizContext from '../ContextQuiz/ContextQuiz'\n\n\nfunction Quiz({children}) {\n\n \n\n\n  const initialState = {\n    progressDegree: 0,\n    questions,\n    currentQuestion: 0,\n    currentAnswer: '',\n    answers: [],\n    showResults: false,\n    error: ''\n  }\n\n  const [state, dispatch] = useReducer(quizReducer, initialState)\n  const {currentQuestion, currentAnswer, answers, showResults, error, progressDegree} = state;\n  const question = questions[currentQuestion]\n\n\n\n  const renderError = () => {\n    if(!error) {\n      return\n    }\n\n    return <StyledErrorText>{error}</StyledErrorText>\n\n  }\n\n  const renderResultMark = (question, answer) => {\n    if(question.correct_answer === answer.answer) {\n\n    return <FontAwesomeIcon className=\"icon-up\" icon={faThumbsUp} />\n    } \n    return  <FontAwesomeIcon className=\"icon-down\" icon={faThumbsDown} />\n  }\n\n  const renderResultsData = () => {\n    return answers.map(answer => {\n      const question = questions.find( \n        question => question.id === answer.questionID\n     )\n       return(\n        <div key={question.id} className=\"results-panel\">\n          {question.question}   {renderResultMark(question, answer)}\n        </div>\n      )\n    })\n  }\n  \n\n  const restart = () => {\n  \n    dispatch({type: RESET_QUIZ})\n\n  }\n\n  const next = () => {\n\n    const answer = {\n      questionID: question.id, \n      answer: currentAnswer\n    }\n\n    if(!currentAnswer){\n      dispatch({type: SET_ERROR , error: \"Please select an option!\" })\n      return;\n    }\n\n    answers.push(answer)\n    dispatch({type: ADD_ANSWER , answers})\n    dispatch({type: SET_CURRENT_ANSWER , currentAnswer: ''})\n\n  \n    if (currentQuestion + 1 < questions.length) {\n      dispatch({\n          type: SET_CURRENT_QUESTION,\n          currentQuestion: currentQuestion + 1,\n          progressDegree: progressDegree + 10,\n      });\n   \n      return;\n  }\n  dispatch({type: SET_SHOW_RESULTS, showResults: true});\n};\n\n\n\n\n  if(showResults) {\n    return (\n      \n      \n      <ResultsBox>\n        <ButtonRestart onClick={restart}>{children}</ButtonRestart>\n       <div> {renderResultsData()} </div>\n      </ResultsBox>\n      \n    )\n\n  } else {\n\n    return (\n      <QuizContext.Provider\n      value=\n      {{state, dispatch}}\n      >\n          \n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n          <MainTitle>{children}</MainTitle>\n    \n          <StyledFormContainer>\n\n              <Progress\n              total={questions.length} \n              currentQuestion={currentQuestion + 1}\n              />\n              <Icon/>\n\n              <Question/>\n              {renderError()}\n\n              <Answers/>\n\n            <ProgressBar progressDegree={progressDegree} />\n\n            <ButtonNext onClick={next}>{children}</ButtonNext>\n            \n          </StyledFormContainer>\n        </ThemeProvider>\n  \n      </QuizContext.Provider>\n  \n    );\n    \n  }\n\n\n  \n}\n\nexport default Quiz;\n","\nimport React  from 'react';\nimport Quiz from './Components/Quiz/Quiz.js'\n\n\nfunction App() {\n\n    return (\n        <Quiz/>\n    )\n    \n }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}